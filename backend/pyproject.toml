[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools"]

[project]
authors = [
  { name = "Zhenlin Wang (Criss)", email = "zhenlin.wang.criss@gmail.com" },
]
dependencies = ["objprint>0.1.3"]
description = "AI Resume Assistant"
dynamic = ["version"]
name = "resume_assist"
requires-python = ">=3.11"

[project.scripts]
resume-assist = "resume_assist.__main__:cli"

[project.urls]
Documentation = "https://resume_assist.readthedocs.io"
Homepage = "https://github.com/criss-wang/ResumeAssist"

[tool.flake8]
exclude = [".git", "__pycache__"]
ignore = ['E231', 'E241', 'E501', "W503", "F401"]
extend-ignore = ['E203']
per_file_ignores = ['__init__.py:F401']
max-line-length = 127
statistics = true
count = true


[tool.pytest.ini_options]
addopts = ["--cov=resume_assist", "--cov-report=term-missing"]
filterwarnings = ["ignore::DeprecationWarning"]
testpaths = ["tests"]

[tool.mypy]
ignore_missing_imports = true
plugins = ["sqlalchemy.ext.mypy.plugin"]

[tool.coverage.run]
branch = true
omit = ["main.py", "__*__.py", "*/rest/factories.py"]

[tool.coverage.report]
exclude_also = [
  # Don't complain about missing debug-only code:
  "def __repr__",
  "if self\\.debug",

  # Don't complain if tests don't hit defensive assertion code:
  "pass",
  "raise HTTPException",
  "raise AssertionError",
  "raise NotImplementedError",
  "except Exception as e:",

  # Don't complain if non-runnable code isn't run:
  "if 0:",
  "if session is not None:",
  "if __name__ == .__main__.:",

  # Don't complain about abstract methods, they aren't run:
  "@(abc\\.)?abstractmethod",
] # Regexes for lines to exclude from consideration

ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"
